"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/data-validation.ts":
/*!********************************!*\
  !*** ./lib/data-validation.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCumulativeFeesAtVolume: function() { return /* binding */ getCumulativeFeesAtVolume; },\n/* harmony export */   getFeeAtVolume: function() { return /* binding */ getFeeAtVolume; },\n/* harmony export */   normalizeToDayBasis: function() { return /* binding */ normalizeToDayBasis; },\n/* harmony export */   testCumulativeFeeCalculation: function() { return /* binding */ testCumulativeFeeCalculation; },\n/* harmony export */   validateDataset: function() { return /* binding */ validateDataset; }\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/zod/v4/classic/schemas.js\");\n\nconst FeePointSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    volume: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0),\n    fee: zod__WEBPACK_IMPORTED_MODULE_0__.number()\n});\nconst ExchangeSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    exchange: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1),\n    type: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"CEX\",\n        \"DEX\",\n        \"Nado\"\n    ]),\n    product: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"perp\",\n        \"spot\"\n    ]),\n    day_basis: zod__WEBPACK_IMPORTED_MODULE_0__.number().int().positive(),\n    maker_fees: zod__WEBPACK_IMPORTED_MODULE_0__.array(FeePointSchema).min(1),\n    taker_fees: zod__WEBPACK_IMPORTED_MODULE_0__.array(FeePointSchema).min(1)\n});\nconst DatasetSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    exchanges: zod__WEBPACK_IMPORTED_MODULE_0__.array(ExchangeSchema).min(1)\n});\nfunction validateDataset(data) {\n    try {\n        return DatasetSchema.parse(data);\n    } catch (error) {\n        console.error(\"Dataset validation failed:\", error);\n        throw new Error(\"Invalid dataset format\");\n    }\n}\nfunction normalizeToDayBasis(exchange, targetDayBasis) {\n    if (exchange.day_basis === targetDayBasis) {\n        return exchange;\n    }\n    // Use simple, clean multipliers for better user understanding\n    let multiplier;\n    if (exchange.day_basis === 7 && targetDayBasis === 14) {\n        multiplier = 2; // 7-day → 14-day: multiply by 2\n    } else if (exchange.day_basis === 7 && targetDayBasis === 30) {\n        multiplier = 4; // 7-day → 30-day: multiply by 4\n    } else if (exchange.day_basis === 14 && targetDayBasis === 7) {\n        multiplier = 0.5; // 14-day → 7-day: divide by 2\n    } else if (exchange.day_basis === 14 && targetDayBasis === 30) {\n        multiplier = 2; // 14-day → 30-day: multiply by 2\n    } else if (exchange.day_basis === 30 && targetDayBasis === 7) {\n        multiplier = 0.25; // 30-day → 7-day: divide by 4\n    } else if (exchange.day_basis === 30 && targetDayBasis === 14) {\n        multiplier = 0.5; // 30-day → 14-day: divide by 2\n    } else {\n        // Fallback to original calculation (shouldn't happen with our current day_basis values)\n        multiplier = targetDayBasis / exchange.day_basis;\n    }\n    return {\n        ...exchange,\n        day_basis: targetDayBasis,\n        maker_fees: exchange.maker_fees.map((point)=>({\n                ...point,\n                volume: point.volume * multiplier\n            })),\n        taker_fees: exchange.taker_fees.map((point)=>({\n                ...point,\n                volume: point.volume * multiplier\n            }))\n    };\n}\nfunction getFeeAtVolume(feeSchedule, volume) {\n    var _feeSchedule_;\n    var _feeSchedule__fee;\n    // Find the last fee point where volume <= target volume\n    let applicableFee = (_feeSchedule__fee = (_feeSchedule_ = feeSchedule[0]) === null || _feeSchedule_ === void 0 ? void 0 : _feeSchedule_.fee) !== null && _feeSchedule__fee !== void 0 ? _feeSchedule__fee : 0;\n    for (const point of feeSchedule){\n        if (volume >= point.volume) {\n            applicableFee = point.fee;\n        } else {\n            break;\n        }\n    }\n    return applicableFee;\n}\nfunction getCumulativeFeesAtVolume(feeSchedule, volume) {\n    if (volume <= 0) return 0;\n    let totalFees = 0;\n    let previousVolume = 0;\n    // Calculate fees for each tier up to the target volume\n    // This represents the total fees paid to reach the specified volume threshold\n    for(let i = 0; i < feeSchedule.length; i++){\n        const currentPoint = feeSchedule[i];\n        const nextPoint = feeSchedule[i + 1];\n        // If we haven't reached this tier yet, skip\n        if (volume < currentPoint.volume) continue;\n        // Calculate the volume range for this tier\n        const tierStartVolume = Math.max(previousVolume, currentPoint.volume);\n        const tierEndVolume = nextPoint ? Math.min(volume, nextPoint.volume) : volume;\n        if (tierEndVolume > tierStartVolume) {\n            // Calculate volume in this tier (convert from millions to actual volume)\n            // Note: Volume in dataset is stored in millions (e.g., 5 = $5M)\n            const tierVolume = (tierEndVolume - tierStartVolume) * 1000000; // Convert from millions to actual volume\n            // Calculate fees for this tier (fees are in basis points, so divide by 10000)\n            // Example: 1.5 bps = 0.015% = 0.00015\n            const feeRate = currentPoint.fee / 10000;\n            const tierFees = tierVolume * feeRate;\n            totalFees += tierFees;\n        }\n        previousVolume = currentPoint.volume;\n    // Don't break here - we need to process all tiers up to the target volume\n    // The loop will naturally end when we've processed all relevant tiers\n    }\n    return totalFees;\n}\n// Test function to verify cumulative fee calculations\nfunction testCumulativeFeeCalculation() {\n    const testSchedule = [\n        {\n            volume: 0,\n            fee: 1.5\n        },\n        {\n            volume: 5,\n            fee: 1.2\n        },\n        {\n            volume: 25,\n            fee: 0.8\n        }\n    ];\n    // Test at $30M volume\n    const result = getCumulativeFeesAtVolume(testSchedule, 30);\n    // Manual calculation:\n    // 0-5M: $5M × 1.5 bps = $5M × 0.00015 = $750\n    // 5-25M: $20M × 1.2 bps = $20M × 0.00012 = $2,400\n    // 25-30M: $5M × 0.8 bps = $5M × 0.00008 = $400\n    // Total: $750 + $2,400 + $400 = $3,550\n    console.log(\"Test cumulative fees at $30M:\", {\n        calculated: result,\n        expected: 3550,\n        correct: Math.abs(result - 3550) < 0.01\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/data-validation.ts\n"));

/***/ })

});