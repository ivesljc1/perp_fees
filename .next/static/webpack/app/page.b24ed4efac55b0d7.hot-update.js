"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/chart-utils.ts":
/*!****************************!*\
  !*** ./lib/chart-utils.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EXCHANGE_COLORS: function() { return /* binding */ EXCHANGE_COLORS; },\n/* harmony export */   createStepData: function() { return /* binding */ createStepData; },\n/* harmony export */   formatCumulativeFees: function() { return /* binding */ formatCumulativeFees; },\n/* harmony export */   formatFee: function() { return /* binding */ formatFee; },\n/* harmony export */   formatVolume: function() { return /* binding */ formatVolume; },\n/* harmony export */   generateBpsTicks: function() { return /* binding */ generateBpsTicks; },\n/* harmony export */   generateTicks: function() { return /* binding */ generateTicks; },\n/* harmony export */   snapToMillionTick: function() { return /* binding */ snapToMillionTick; }\n/* harmony export */ });\nfunction formatVolume(volume) {\n    // Volume is stored in millions format (e.g., 5 = $5M)\n    if (volume >= 1000) {\n        return \"$\".concat((volume / 1000).toFixed(1), \"B\");\n    } else if (volume >= 1) {\n        return \"$\".concat(volume.toFixed(1), \"M\");\n    } else {\n        return \"$\".concat((volume * 1000).toFixed(0), \"K\");\n    }\n}\nfunction formatFee(fee) {\n    return \"\".concat(fee >= 0 ? \"+\" : \"\").concat(fee.toFixed(1), \"bps\");\n}\nfunction formatCumulativeFees(fees) {\n    // Format as full dollar amount with commas and 2 decimal places\n    return \"$\".concat(fees.toLocaleString(\"en-US\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    }));\n}\nfunction generateTicks(min, max, isLog) {\n    if (isLog) {\n        // For log scale, generate powers of 10\n        const minLog = Math.floor(Math.log10(Math.max(1, 1)));\n        const maxLog = Math.ceil(Math.log10(max));\n        const ticks = [];\n        for(let i = minLog; i <= maxLog; i++){\n            const base = Math.pow(10, i);\n            ticks.push(base);\n            if (base * 5 <= max) ticks.push(base * 5);\n        }\n        return ticks.filter((tick)=>tick >= 1 && tick <= max);\n    } else {\n        // For linear scale, generate clean ticks in millions format\n        const range = max - min;\n        let tickInterval;\n        // Use clean intervals based on range (values are in millions)\n        if (range <= 20) {\n            tickInterval = 5; // $5M intervals\n        } else if (range <= 100) {\n            tickInterval = 10; // $10M intervals\n        } else if (range <= 500) {\n            tickInterval = 50; // $50M intervals\n        } else if (range <= 2000) {\n            tickInterval = 100; // $100M intervals\n        } else if (range <= 5000) {\n            tickInterval = 500; // $500M intervals\n        } else {\n            tickInterval = 1000; // $1B intervals\n        }\n        // Start from 0 or first clean interval\n        const startTick = Math.max(0, Math.floor(min / tickInterval) * tickInterval);\n        const endTick = Math.ceil(max / tickInterval) * tickInterval;\n        const ticks = [];\n        for(let tick = startTick; tick <= endTick; tick += tickInterval){\n            if (tick >= min && tick <= max) {\n                ticks.push(tick);\n            }\n        }\n        // Ensure we always have at least a few ticks\n        if (ticks.length < 3) {\n            const smallerInterval = tickInterval / 2;\n            const newTicks = [];\n            for(let tick = startTick; tick <= endTick; tick += smallerInterval){\n                if (tick >= min && tick <= max) {\n                    newTicks.push(tick);\n                }\n            }\n            return newTicks;\n        }\n        return ticks;\n    }\n}\nfunction generateBpsTicks(min, max) {\n    // Generate ticks every 1 basis point\n    const minTick = Math.floor(min);\n    const maxTick = Math.ceil(max);\n    const ticks = [];\n    for(let tick = minTick; tick <= maxTick; tick += 1){\n        ticks.push(tick);\n    }\n    return ticks;\n}\nfunction snapToMillionTick(volume) {\n    // Don't snap - return the exact volume for precise alignment\n    return Math.round(volume);\n}\nfunction createStepData(feeSchedule, maxVolume) {\n    const stepData = [];\n    for(let i = 0; i < feeSchedule.length; i++){\n        const current = feeSchedule[i];\n        const next = feeSchedule[i + 1];\n        // Add the step start point\n        stepData.push({\n            volume: current.volume,\n            fee: current.fee\n        });\n        // Add the step end point (right before next volume)\n        if (next) {\n            stepData.push({\n                volume: next.volume - 1,\n                fee: current.fee\n            });\n        } else {\n            // Last step extends to max volume\n            stepData.push({\n                volume: maxVolume,\n                fee: current.fee\n            });\n        }\n    }\n    return stepData;\n}\nconst EXCHANGE_COLORS = {\n    \"Binance\": \"#F0B90B\",\n    \"Bybit\": \"#F7931A\",\n    \"Kraken\": \"#5C4B99\",\n    \"OKX\": \"#0066CC\",\n    \"Coinbase\": \"#0052FF\",\n    \"Hyperliquid\": \"#00D2FF\",\n    \"EdgeX\": \"#FF6B35\",\n    \"Jupiter\": \"#C147E9\",\n    \"Drift\": \"#9945FF\",\n    \"ApeX Protocol\": \"#00FFB3\",\n    \"Aster\": \"#FF4081\",\n    \"GMX\": \"#4DABF7\",\n    \"Vertex\": \"#7C3AED\",\n    \"ParaDex\": \"#10B981\",\n    \"Nado\": \"#FF1744\"\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/chart-utils.ts\n"));

/***/ })

});